
#emreYbs2023

import socket
import requests


print("\n\tWelcome to the Simple Vulnerability Scanner for Websites\n")
print("This program will scan URLs for common vulnerabilities\n")
print("Provide URLs to scan, including the protocol (e.g. https://www.example.com/) \n")

urls = input("Enter URLs to scan, separated by commas: ").split(",")

# Use the requests module to send HTTP requests to the target websites
for url in urls:
    try:
        response = requests.get(url.strip())

        # Check the HTTP response headers and body for common vulnerabilities
        vulnerabilities = []
        if "X-Content-Type-Options" not in response.headers:
            vulnerabilities.append("Missing X-Content-Type-Options header")
        if "X-Frame-Options" not in response.headers:
            vulnerabilities.append("Missing X-Frame-Options header")
        if "Content-Security-Policy" not in response.headers:
            vulnerabilities.append("Missing Content-Security-Policy header")
        if "<script>alert('XSS')</script>" in response.text:
            vulnerabilities.append("Reflected XSS vulnerability")
        if "id=" in response.text:
            vulnerabilities.append("IDOR vulnerability")
        if "../../../../../../../../etc/passwd" in response.text:
            vulnerabilities.append("LFI vulnerability")
        if "root:x:0:0:root:/root:/bin/bash" in response.text:
            vulnerabilities.append("RCE vulnerability")
        if "password" in response.text:
            vulnerabilities.append("Password disclosure vulnerability")
        if "admin" in response.text:
            vulnerabilities.append("Admin panel disclosure vulnerability")
        if "wp-admin" in response.text:
            vulnerabilities.append(
                "WordPress admin panel disclosure vulnerability")
        if "wp-content" in response.text:
            vulnerabilities.append(
                "WordPress content disclosure vulnerability")
        if "wp-login" in response.text:
            vulnerabilities.append(
                "WordPress login page disclosure vulnerability")
        if "wp-includes" in response.text:
            vulnerabilities.append(
                "WordPress includes disclosure vulnerability")
        if "wp-json" in response.text:
            vulnerabilities.append("WordPress JSON disclosure vulnerability")
        if "wp-config" in response.text:
            vulnerabilities.append(
                "WordPress config file disclosure vulnerability")

        if "<script>alert('XSS')</script>" in response.text:
            vulnerabilities.append("Reflected XSS vulnerability")
        if "<scr<script>ipt>alert('XSS')</scr<script>ipt>" in response.text:
            vulnerabilities.append("Reflected XSS vulnerability")
        if "\"> <script>alert('XSS')</script>" in response.text:
            vulnerabilities.append("Reflected XSS vulnerability")
        if "\"> <script>alert(String.fromCharCode(88,83,83))</script>" in response.text:
            vulnerabilities.append("Reflected XSS vulnerability")
        if "<script>\u0061lert('22')</script>" in response.text:
            vulnerabilities.append("Reflected XSS vulnerability")
        if "<script>eval('\x61lert(\'33\')')</script>" in response.text:
            vulnerabilities.append("Reflected XSS vulnerability")
        if "'-" in response.text:
            vulnerabilities.append("Login bypassing vulnerability")
        if "' '" in response.text:
            vulnerabilities.append("Login bypassing vulnerability")
        if "'&'" in response.text:
            vulnerabilities.append("Login bypassing vulnerability")
        if "'^'" in response.text:
            vulnerabilities.append("Login bypassing vulnerability")
        if "'*'" in response.text:
            vulnerabilities.append("Login bypassing vulnerability")
        if " or 1=1 limit 1 -- -+" in response.text:
            vulnerabilities.append("Login bypassing vulnerability")
        if '="or' in response.text:
            vulnerabilities.append("Login bypassing vulnerability")
        if "' or ''-'" in response.text:
            vulnerabilities.append("Login bypassing vulnerability")
        if "' or '' '" in response.text:
            vulnerabilities.append("Login bypassing vulnerability")
        if "' or ''&'" in response.text:
            vulnerabilities.append("Login bypassing vulnerability")
        if "' or ''^'" in response.text:
            vulnerabilities.append("Login bypassing vulnerability")
        if "' or ''*'" in response.text:
            vulnerabilities.append("Login bypassing vulnerability")
        if '-||0' in response.text:
            vulnerabilities.append("Login bypassing vulnerability")
        if "-||0" in response.text:
            vulnerabilities.append("Login bypassing vulnerability")
        if "-" in response.text:
            vulnerabilities.append("Login bypassing vulnerability")
        if " " in response.text:
            vulnerabilities.append("Login bypassing vulnerability")
        if "&" in response.text:
            vulnerabilities.append("Login bypassing vulnerability")
        if "^" in response.text:
            vulnerabilities.append("Login bypassing vulnerability")
        if "*" in response.text:
            vulnerabilities.append("Login bypassing vulnerability")
        if "--" in response.text:
            vulnerabilities.append("Login bypassing vulnerability")
        if " or ""-" in response.text:
            vulnerabilities.append("Login bypassing vulnerability")
        if " or "" " in response.text:
            vulnerabilities.append("Login bypassing vulnerability")
        if " or ""&" in response.text:
            vulnerabilities.append("Login bypassing vulnerability")
        if " or ""^" in response.text:
            vulnerabilities.append("Login bypassing vulnerability")
        if " or ""*" in response.text:
            vulnerabilities.append("Login bypassing vulnerability")
        if "or true--" in response.text:
            vulnerabilities.append("Login bypassing vulnerability")
        if " or true--" in response.text:
            vulnerabilities.append("Login bypassing vulnerability")
        if "' or true--" in response.text:
            vulnerabilities.append("Login bypassing vulnerability")
        if '") or true--' in response.text:
            vulnerabilities.append("Login bypassing vulnerability")
        if "') or true--" in response.text:
            vulnerabilities.append("Login bypassing vulnerability")
        if "' or 'x'='x" in response.text:
            vulnerabilities.append("Login bypassing vulnerability")
        if "') or ('x')=('x" in response.text:
            vulnerabilities.append("Login bypassing vulnerability")
        if "')) or (('x'))=(('x" in response.text:
            vulnerabilities.append("Login bypassing vulnerability")
        if '" or "x"="x' in response.text:
            vulnerabilities.append("Login bypassing vulnerability")
        if '") or ("x")=("x' in response.text:
            vulnerabilities.append("Login bypassing vulnerability")
        if ')) or (("x"))=(("x' in response.text:
            vulnerabilities.append("Login bypassing vulnerability")
        if "or 2 like 2" in response.text:
            vulnerabilities.append("Login bypassing vulnerability")
        if "or 1=1" in response.text:
            vulnerabilities.append("Login bypassing vulnerability")
        if "or 1=1--" in response.text:
            vulnerabilities.append("Login bypassing vulnerability")
        if "or 1=1#" in response.text:
            vulnerabilities.append("Login bypassing vulnerability")
        if "or 1=1/*" in response.text:
            vulnerabilities.append("Login bypassing vulnerability")
        if "admin' --" in response.text:
            vulnerabilities.append("Login bypassing vulnerability")
        if "admin' -- -" in response.text:
            vulnerabilities.append("Login bypassing vulnerability")
        if "admin' #" in response.text:
            vulnerabilities.append("Login bypassing vulnerability")
        if "admin'/*" in response.text:
            vulnerabilities.append("Login bypassing vulnerability")
        if "admin' or '2' LIKE '1" in response.text:
            vulnerabilities.append("Login bypassing vulnerability")
        if "admin' or 2 LIKE 2--" in response.text:
            vulnerabilities.append("Login bypassing vulnerability")
        if "admin' or 2 LIKE 2#" in response.text:
            vulnerabilities.append("Login bypassing vulnerability")
        if "admin') or 2 LIKE 2#" in response.text:
            vulnerabilities.append("Login bypassing vulnerability")
        if "admin') or 2 LIKE 2--" in response.text:
            vulnerabilities.append("Login bypassing vulnerability")
        if "admin') or ('2' LIKE '2" in response.text:
            vulnerabilities.append("Login bypassing vulnerability")
        if "admin') or ('2' LIKE '2'#" in response.text:
            vulnerabilities.append("Login bypassing vulnerability")
        if "admin') or ('2' LIKE '2'/*" in response.text:
            vulnerabilities.append("Login bypassing vulnerability")
        if "admin') or 1=1 -- -" in response.text:
            vulnerabilities.append("Login bypassing vulnerability")
        if "admin' or '1'='1" in response.text:
            vulnerabilities.append("Login bypassing vulnerability")
        if "admin' or 1=1 -- -" in response.text:
            vulnerabilities.append("Login bypassing vulnerability")
        if "admin' or '1'='1'--" in response.text:
            vulnerabilities.append("Login bypassing vulnerability")
        if "admin' or '1'='1'#" in response.text:
            vulnerabilities.append("Login bypassing vulnerability")
        if "admin' or '1'='1'/*" in response.text:
            vulnerabilities.append("Login bypassing vulnerability")     
        if "<script>\u0061lert('XSS')</script>" in response.text:
            vulnerabilities.append("Reflected XSS vulnerability")
        if "<script>eval('\x61lert(\'XSS\')')</script>" in response.text:
            vulnerabilities.append("Reflected XSS vulnerability")

    # Save the results in a text file
        with open(f"vulnerability_scan_results.txt", "a") as f:
            f.write(f"Target URL: {url.strip()}\n")
            f.write("Vulnerabilities found:\n")
            if vulnerabilities:
                for v in vulnerabilities:
                    f.write(f"- {v}\n")
            else:
                f.write("- None\n")
    except KeyboardInterrupt:
        print("\n\nKeyboardInterrupt detected. Exiting program...")
        exit()
    except:
        print(f"\n\nError scanning {url.strip()}. Skipping...\n")


